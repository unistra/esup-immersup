stages:
  - test
  - sonarqube-check

image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/python:3.12-slim

services:
  - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres
    alias: postgres

variables:
  POSTGRES_DB: immersionlyceens
  POSTGRES_USER: immersionlyceens
  POSTGRES_PASSWORD: immersionlyceens
  PYTHON_VERSION: "3.12"
  SAFETY_ARGS: "-i 51457 -i 51499 -i 67599 -i 70612"
  
sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:11
    entrypoint: [""]
  tags:
    - cluster

  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  
  script: 
    - sonar-scanner -Dsonar.host.url="${SONAR_HOST_URL}"
  allow_failure: true
  needs:
    - job: unittest
      artifacts: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'


#unittest:
#  stage: test
#  tags:
#    - python3.12
#  before_script:
#  - apt-get update && apt-get install -y build-essential libffi-dev libxslt1-dev libxml2-dev zlib1g-dev libcairo2 libpango1.0-0 libpq-dev libmagic1 tk  
#  script:
#    - pip3 install tox
#    - tox
#  artifacts:
#    paths:
#      - coverage.xml  

#safety:
#  stage: test
#  tags:
#    - python3.12
#  script:
#    - pip3 install safety
#    - pip3 install -r requirements/prod.txt
#    - pip3 install -U setuptools
#    - pip3 install -U pip
#    - safety check -i 51457 -i 51499 -i 67599 -i 70612
#  only:
#    - develop
#    - master

bandit:
  stage: test
  tags:
    - python3.12
  script:
    - find immersionlyceens -name "*.py" ! -path "**/wsgi.py" ! -path "**/settings/**" ! -path "**/tests/**" ! -path "**/__init__.py" ! -path "**/migrations/**" ! -path "**/urls.py" | tee /tmp/find.txt
    - apt update && apt install -y build-essential libcairo2 libpango1.0-0 libffi-dev shared-mime-info libpq-dev libsasl2-dev python-dev libssl-dev libldap2-dev libmagic1
    - pip3 install -r requirements/dev.txt
    - bandit --exit-zero $(cat /tmp/find.txt)

pytype:
  stage: test
  tags:
    - python3.12
  script:
    - pip3 install -r requirements/dev.txt
    - pytype --config=pytype.cfg

include:
  - project: "docker/template"
    file: "python-unittest.gitlab-ci.yml"
  - project: "docker/template"
    file: "python-safety.gitlab-ci.yml"
    