# Generated by Django 5.0.4 on 2024-05-13 19:30

import django.db.models.deletion
import immersionlyceens.apps.core.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0226_merge_20240510_1524'),
    ]

    operations = [
        migrations.AddField(
            model_name='slot',
            name='allow_group_registrations',
            field=models.BooleanField(blank=True, default=True, null=True, verbose_name='Allow group registrations'),
        ),
        migrations.AddField(
            model_name='slot',
            name='allow_individual_registrations',
            field=models.BooleanField(blank=True, default=True, null=True, verbose_name='Allow individual registrations'),
        ),
        migrations.AddField(
            model_name='slot',
            name='group_mode',
            field=models.SmallIntegerField(blank=True, choices=[(0, 'One group'), (1, 'By number of places')], default=0, null=True, verbose_name='Group mode'),
        ),
        migrations.AddField(
            model_name='slot',
            name='n_group_places',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of places for groups'),
        ),
        migrations.AddField(
            model_name='slot',
            name='public_group',
            field=models.BooleanField(blank=True, null=True, verbose_name='Public group regisrations'),
        ),
        migrations.AlterField(
            model_name='period',
            name='registration_end_date_policy',
            field=models.SmallIntegerField(choices=[(0, 'Use this period registration end date'), (1, 'Use slots registration end dates')], default=1, verbose_name='Registration end date policy'),
        ),
        migrations.AlterField(
            model_name='slot',
            name='n_places',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of individual places'),
        ),
        migrations.CreateModel(
            name='ImmersionGroupRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Registration date')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last updated date')),
                ('cancellation_date', models.DateTimeField(blank=True, null=True, verbose_name='Cancellation date')),
                ('survey_email_sent', models.BooleanField(default=False, verbose_name='Survey notification status')),
                ('students_count', models.SmallIntegerField(verbose_name='Registered students count')),
                ('guides_count', models.SmallIntegerField(verbose_name='Student guides count')),
                ('file', models.FileField(blank=True, help_text='Uniquement des fichiers de type (pdf, doc, docx, odt, xls, xlsx). Taille max : 20,0\xa0Mio', null=True, upload_to=immersionlyceens.apps.core.models.get_file_path, verbose_name='File')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('emails', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('cancellation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='group_immersions', to='core.canceltype', verbose_name='Cancellation type')),
                ('highschool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_immersions', to='core.highschool', verbose_name='High school')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_immersions', to='core.slot', verbose_name='Slot')),
            ],
            options={
                'verbose_name': 'Group immersion',
                'verbose_name_plural': 'Group immersions',
            },
        ),
    ]
