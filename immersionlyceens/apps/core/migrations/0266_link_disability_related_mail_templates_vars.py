# Generated by Django 5.0.14 on 2025-07-10 10:12
from django.db import migrations

def associate_template_vars(apps, schema_editor):
    MailTemplate = apps.get_model('core', 'MailTemplate')
    MailTemplateVars = apps.get_model('core', 'MailTemplateVars')

    try:
        template = MailTemplate.objects.get(code='HANDICAP_NOTIF_FICHE_VALIDE')

        codes = [
            "{{ annee }}",
            "{{ inscrit.prenom }}",
            "{{ inscrit.nom }}",
            "{{ inscrit.email }}",
            "{{ inscrit.aDeclareHandicap }}"
        ]

        for code in codes:
            var = MailTemplateVars.objects.get(code__iexact=code)
            template.available_vars.add(var)
    except MailTemplate.DoesNotExist:
        print("Mail template HANDICAP_NOTIF_FICHE_VALIDE does not exist")
    except MailTemplateVars.DoesNotExist:
        print("Mail template variable %s does not exist" % code)

    try:
        template = MailTemplate.objects.get(code='HANDICAP_NOTIF_IMMERSION')

        codes = [
            "{{ annee }}",
            "{{ creneau.batiment.lien }}",
            "{{ creneau.batiment.libelle }}",
            "{{ creneau.campus.libelle }}",
            "{{ creneau.campus.ville }}",
            "{{ creneau.cours.formation }}",
            "{{ creneau.cours.libelle }}",
            "{{ creneau.cours.type }}",
            "{{ creneau.date }}",
            "{{ creneau.estuncours }}",
            "{{ creneau.estunevenement }}",
            "{{ creneau.etablissement }}",
            "{{ creneau.evenement.description }}",
            "{{ creneau.evenement.libelle }}",
            "{{ creneau.evenement.type }}",
            "{{ creneau.heuredebut }}",
            "{{ creneau.heurefin }}",
            "{{ creneau.info }}",
            "{{ creneau.intervenants }}",
            "{{ creneau.limite_annulation }}",
            "{{ creneau.limite_annulation_depassee }}",
            "{{ creneau.limite_inscription }}",
            "{{ creneau.limite_inscription_depassee }}",
            "{{ creneau.lycee }}",
            "{{ creneau.salle }}",
            "{{ creneau.structure }}",
            "{{ creneau.temoinDistanciel }}",
            "{{ creneau.lien }}",
            "{{ evenement.libelle }}",
            "{{ cours.libelle }}",
            "{{ urlPlateforme }}",
            "{{ inscrit.prenom }}",
            "{{ inscrit.nom }}",
            "{{ inscrit.email }}"
        ]

        for code in codes:
            try:
                var = MailTemplateVars.objects.get(code__iexact=code)
                template.available_vars.add(var)
            except MailTemplateVars.DoesNotExist:
                print("Mail template variable %s does not exist" % code)
    except MailTemplate.DoesNotExist:
        print("Mail template HANDICAP_NOTIF_IMMERSION does not exist")

    template_codes = [
        "CPT_MIN_CREATE",
        "CPT_MIN_VALIDE",
        "CRENEAU_MODIFY_NOTIF",
        "IMMERSION_CONFIRM",
        "IMMERSION_RAPPEL",
        "IMMERSION_ANNUL"
    ]

    # Add "inscrit.aDeclareHandicap" var to these templates
    try:
        var = MailTemplateVars.objects.get(code__iexact="{{ inscrit.aDeclareHandicap }}")
        for template_code in template_codes:
            try:
                template = MailTemplate.objects.get(code=template_code)
                template.available_vars.add(var)
            except MailTemplate.DoesNotExist:
                print(f"Mail template {template_code} does not exist")
    except MailTemplateVars.DoesNotExist:
        print(f"Mail template variable 'inscrit.aDeclareHandicap' does not exist")

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0265_create_disability_related_mail_templates'),
    ]

    operations = [
        migrations.RunPython(associate_template_vars)
    ]