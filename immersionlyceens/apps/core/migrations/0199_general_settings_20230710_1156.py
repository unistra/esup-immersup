# Generated by Django 3.2.19 on 2023-07-10 09:56
import json

from django.db import migrations
from django.db.utils import IntegrityError

def load_general_settings(apps, schema_editor):
    GeneralSettings = apps.get_model('core', 'GeneralSettings')

    data = {
        'TWITTER_ACCOUNT_URL': {
            'type': 'text',
            'value': 'https://twitter.com/',
            'description': "Compte twitter à utiliser dans le fil d'actualités"
        },
        'PLATFORM_URL': {
            'type': 'text',
            'value': 'https://immersion.mon-etablissement.fr',
            'description': 'Adresse de la plateforme Immersion'
        },
        'MAIL_FROM': {
            'type': 'text',
            'value': 'noreply@mon-etablissement.fr',
            'description': "Adresse d'expédition qui figurera sur les emails envoyés par l'application"
        },
        'GLOBAL_MAILING_LIST': {
            'type': 'text',
            'value': 'espace-avenir-lyceens-contact@mon-etablissement.fr',
            'description': 'Adresse de la liste de diffusion globale'
        },
        'NB_DAYS_SLOT_REMINDER': {
            'type': 'text',
            'value': '3',
            'description': 'Rappels de créneaux aux participants : envois des mails pour les créneaux ayant lieu dans N jours'
        },
        'NB_DAYS_SPEAKER_SLOT_REMINDER': {
            'type': 'text',
            'value': '3',
            'description': 'Rappels de créneaux aux intervenants : envois des mails pour les créneaux ayant lieu dans N jours'
        },
        'NB_WEEKS_STRUCTURES_SLOT_REMINDER': {
            'type': 'text',
            'value': '1',
            'description': 'Rappels de créneaux aux structures : envois des mails pour les créneaux ayant lieu dans N semaines'
        },
        'MAIL_CONTACT_REF_ETAB': {
            'type': 'text',
            'value': 'ref-etab@mon-etablissement.fr',
            'description': 'Adresse de contact du réferent établissement'
        },
        'CHARTER_SIGN': {
            'type': 'boolean',
            'value': True,
            'description': 'Activation de la signature de la charte'
        },
        'HIGHSCHOOL_VISIT': {
            'type': 'boolean',
            'value': True,
            'description': 'Activation de visites en Lycée'
        },
        'EVENTS_OFF_OFFER': {
            'type': 'boolean',
            'value': True,
            'description': "Activation de l'utilisation d'évènement hors offre"
        },
        'ACTIVATE_STUDENTS': {
            'type': 'boolean',
            'value': True,
            'description': 'Activation des étudiants'
        },
        'ACTIVATE_VISITORS': {
            'type': 'boolean',
            'value': True,
            'description': 'Activation des visiteurs'
        },
        'DELETE_RECORD_ATTACHMENTS_AT_VALIDATION': {
            'type': 'boolean',
            'value': True,
            'description': "Si le paramètre est à 'true', les justificatifs sans date de validité seront supprimés après la validation d'une fiche lycéen ou visiteur"
        },
        'ACTIVATE_HIGH_SCHOOL_WITH_AGREEMENT': {
            'type': 'boolean',
            'value': True,
            'description': 'Activation des lycées conventionnés'
        },
        'ACTIVATE_HIGH_SCHOOL_WITHOUT_AGREEMENT': {
            'type': 'boolean',
            'value': True,
            'description': 'Activation des lycées non conventionnés'
        },
        'REQUEST_FOR_STUDENT_AGREEMENT': {
            'type': 'boolean',
            'value': True,
            'description': "Demander l'accord des lycéens pour que leur lycée puisse voir leurs immersions"
        },
        'ATTESTATION_DOCUMENT_DEPOSIT_DELAY': {
            'type': 'integer',
            'value': 30,
            'description': 'Délai (en jours) à partir duquel un lycéen ou un visiteur peut redéposer une pièce justificative valide.'
        },
        'SLOT_CANCELLATION_LIMIT': {
            'type': 'integer',
            'value': '48',
            'description': "Nombre d'heures, avant le début d'un créneau, fixant la limite après laquelle l'annulation n'est plus possible."
        },
        'SLOT_REGISTRATION_LIMIT': {
            'type': 'integer',
            'value': '48',
            'description': "Nombre d'heures, avant le début d'un créneau, fixant la limite après laquelle l'inscription n'est plus possible."
        },
        'ACTIVATE_TRAINING_QUOTAS': {
            'type': 'object',
            'value': {
                'activate': True,
                'default_quota': 2
            },
            'description': "Appliquer des quotas d'immersions en fonction des formations liées aux créneaux"
        },
        'AUTO_SLOT_UNSUBSCRIBE_DELAY': {
            'type': 'integer',
            'value': 15,
            'description': 'Si un justificatif expire un jour J, les inscriptions aux créneaux dans le délai J+<valeur> seront annulées'
        },
        'CONTACT_FORM_URL': {
            'type': 'text',
            'value': '',
            'description': 'Adresse du formulaire de contact'
        }
    }

    for setting_name, parameters in data.items():
        if not GeneralSettings.objects.filter(setting=setting_name).exists():
            GeneralSettings.objects.create(setting=setting_name, parameters=parameters)


class Migration(migrations.Migration):
    dependencies = [
        ('core', '0198_slot_reminder_notification_sent'),
    ]

    operations = [
        migrations.RunPython(load_general_settings)
    ]
