# first builder stage

# pull official base image
FROM python:3.8-slim-bullseye as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install dependencies
RUN apt-get update \
  && apt-get install -y --no-install-recommends gcc libc-dev python3-dev; \
  pip install --upgrade pip
# TODO: We can lint source code before building container
#&& pip install flake8==3.9.2

COPY . .
# lint
# TODO: Linting if needed
# RUN flake8 --ignore=E501,F401 .

# install dependencies
RUN sed -i 's/psycopg2==/psycopg2-binary==/g' /usr/src/app/requirements/common.txt; \
  pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements/docker-demo.txt;


#########
# FINAL #
#########

# pull official base image
FROM python:3.8-slim-bullseye

ENV HOME=/home/immersion
ENV APP_HOME=/home/immersion/web

# create directory for the immersion user & create user
RUN mkdir -p $APP_HOME/staticfiles; \
  mkdir -p $APP_HOME/mediafiles; \
  addgroup immersion && adduser immersion --ingroup immersion;

WORKDIR $APP_HOME

# copy needed files
COPY --from=builder /usr/src/app/wheels /wheels
COPY ./deploy/docker/app/entrypoint-demo.sh .
COPY . $APP_HOME

# prepare files & install requirements & set permissions
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint-demo.sh; \
  chmod +x  $APP_HOME/entrypoint-demo.sh; \
  pip install --no-cache /wheels/* ; \
  sed -i 's/{{ goal }}/docker-demo/g' $APP_HOME/manage.py; \
  sed -i 's/{{ goal }}/docker-demo/g' $APP_HOME/immersionlyceens/wsgi.py; \
  chown -R immersion:immersion $APP_HOME; \
  apt-get update \
  && apt-get install -y --no-install-recommends libxml2-dev libxslt-dev libffi-dev libcairo2-dev libpango1.0-dev gettext;

# change to the app user
USER immersion

# run entrypoint.demo.sh
ENTRYPOINT ["/home/immersion/web/entrypoint-demo.sh"]
